---
- hosts: app
  roles:
    - java
  tasks:

    - name: Test proxy configuration
      shell: >
        if [ -n "$http_proxy" ]; then host="${http_proxy#http://}"; port="${host#*:}"; JAVA_OPTS="$JAVA_OPTS -Dhttp.proxyHost=${host%:*} -Dhttp.proxyPort=${port%/*}"; fi
        && if [ -n "$https_proxy" ]; then host="${https_proxy#http://}"; port="${host#*:}"; JAVA_OPTS="$JAVA_OPTS -Dhttps.proxyHost=${host%:*} -Dhttps.proxyPort=${port%/*}"; fi
        && echo $JAVA_OPTS
      environment: "{{ proxy_env }}"
      register: proxy

    - debug: var=proxy.stdout_lines

    - name: Install unzip
      apt: pkg=unzip state=installed
      environment: "{{ proxy_env }}"
      sudo: yes

    - name: Clear rights-app Download
      file: path="{{ rights_app_dest }}/rights-app-dist.zip" state=absent

    - name: Download rights-app release
      get_url: url="{{ rights_app_repo_url }}/releases/download/{{ rights_app_release }}/rights-app-dist.zip" "dest={{ rights_app_dest }}/rights-app-dist.zip" validate_certs=no
      environment: "{{ proxy_env }}"

    - stat: path="{{ rights_app_dest }}/rights-app-dist.zip"
      register: download

    - fail: msg="Download of {{ rights_app_release }} failed"
      when: not download.stat.exists

    - name: Extract rights-app
      shell: cd "{{ rights_app_dest }}" && unzip -o rights-app-dist.zip

    - include: roles/app/tasks/restart.yml
